{"ast":null,"code":"// Normalize input string\n\n'use strict';\n\nvar TABS_SCAN_RE = /[\\n\\t]/g;\nvar NEWLINES_RE = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\nvar NULL_RE = /\\u0000/g;\nmodule.exports = function inline(state) {\n  var str, lineStart, lastTabPos;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  // Replace tabs with proper number of spaces (1..4)\n  if (str.indexOf('\\t') >= 0) {\n    lineStart = 0;\n    lastTabPos = 0;\n    str = str.replace(TABS_SCAN_RE, function (match, offset) {\n      var result;\n      if (str.charCodeAt(offset) === 0x0A) {\n        lineStart = offset + 1;\n        lastTabPos = 0;\n        return match;\n      }\n      result = '    '.slice((offset - lineStart - lastTabPos) % 4);\n      lastTabPos = offset - lineStart + 1;\n      return result;\n    });\n  }\n  state.src = str;\n};","map":{"version":3,"names":["TABS_SCAN_RE","NEWLINES_RE","NULL_RE","module","exports","inline","state","str","lineStart","lastTabPos","src","replace","indexOf","match","offset","result","charCodeAt","slice"],"sources":["E:/Projects/ASPHENIX/Pokedex-AI-v1/node_modules/markdown-it/lib/rules_core/normalize.js"],"sourcesContent":["// Normalize input string\n\n'use strict';\n\n\nvar TABS_SCAN_RE = /[\\n\\t]/g;\nvar NEWLINES_RE  = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\nvar NULL_RE      = /\\u0000/g;\n\n\nmodule.exports = function inline(state) {\n  var str, lineStart, lastTabPos;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  // Replace tabs with proper number of spaces (1..4)\n  if (str.indexOf('\\t') >= 0) {\n    lineStart = 0;\n    lastTabPos = 0;\n\n    str = str.replace(TABS_SCAN_RE, function (match, offset) {\n      var result;\n      if (str.charCodeAt(offset) === 0x0A) {\n        lineStart = offset + 1;\n        lastTabPos = 0;\n        return match;\n      }\n      result = '    '.slice((offset - lineStart - lastTabPos) % 4);\n      lastTabPos = offset - lineStart + 1;\n      return result;\n    });\n  }\n\n  state.src = str;\n};\n"],"mappings":"AAAA;;AAEA,YAAY;;AAGZ,IAAIA,YAAY,GAAG,SAAS;AAC5B,IAAIC,WAAW,GAAI,oCAAoC;AACvD,IAAIC,OAAO,GAAQ,SAAS;AAG5BC,MAAM,CAACC,OAAO,GAAG,SAASC,MAAMA,CAACC,KAAK,EAAE;EACtC,IAAIC,GAAG,EAAEC,SAAS,EAAEC,UAAU;;EAE9B;EACAF,GAAG,GAAGD,KAAK,CAACI,GAAG,CAACC,OAAO,CAACV,WAAW,EAAE,IAAI,CAAC;;EAE1C;EACAM,GAAG,GAAGA,GAAG,CAACI,OAAO,CAACT,OAAO,EAAE,QAAQ,CAAC;;EAEpC;EACA,IAAIK,GAAG,CAACK,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IAC1BJ,SAAS,GAAG,CAAC;IACbC,UAAU,GAAG,CAAC;IAEdF,GAAG,GAAGA,GAAG,CAACI,OAAO,CAACX,YAAY,EAAE,UAAUa,KAAK,EAAEC,MAAM,EAAE;MACvD,IAAIC,MAAM;MACV,IAAIR,GAAG,CAACS,UAAU,CAACF,MAAM,CAAC,KAAK,IAAI,EAAE;QACnCN,SAAS,GAAGM,MAAM,GAAG,CAAC;QACtBL,UAAU,GAAG,CAAC;QACd,OAAOI,KAAK;MACd;MACAE,MAAM,GAAG,MAAM,CAACE,KAAK,CAAC,CAACH,MAAM,GAAGN,SAAS,GAAGC,UAAU,IAAI,CAAC,CAAC;MAC5DA,UAAU,GAAGK,MAAM,GAAGN,SAAS,GAAG,CAAC;MACnC,OAAOO,MAAM;IACf,CAAC,CAAC;EACJ;EAEAT,KAAK,CAACI,GAAG,GAAGH,GAAG;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}